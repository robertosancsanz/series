def _versions = [

        kotlinVersion                : '1.2.50',
        support                      : '28.0.0',
        rxAndroid                    : '2.1.0',
        rxJava                       : '2.2.0',
        architectureComponentsVersion: '1.1.1',
        constraintLayoutVersion      : '1.1.0',
        dagger2Version               : '2.15',
        roomVersion                  : '1.1.1',
        dataBindingCompilerVersion   : '3.1.3',
        databindingVersion           : '1.3.1',
        retrofitVersion              : '2.4.0',
        okhttpinterceptor            : '3.8.1',
        stetho                       : '1.5.0',
        leakcanary:'1.6.1',
//        mvpLiveDataVersion           : '1.1.0',
//
//        analytics                    : '0.6.0',
//        http                         : '0.2.0',
//        log                          : '1.0.0',
//        assertj                      : '2.6.0',
//
        okhttpVersion                : '3.11.0',
//
//        bootstrap                    : '1.1.0',

]

def _libraries = [
        android     : [
                kotlin             : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${_versions.kotlinVersion}",
                appcompat          : "com.android.support:appcompat-v7:${_versions.support}",
                support            : "com.android.support:support-v4:${_versions.support}",
                design             : "com.android.support:design:${_versions.support}",
                constraintLayout   : "com.android.support.constraint:constraint-layout:${_versions.constraintLayoutVersion}",
                databinding        : "com.android.databinding:library:${_versions.databindingVersion}",
                dataBindingCompiler: "com.android.databinding:compiler:${_versions.dataBindingCompilerVersion}",
                dataBindingAdapter : "com.android.databinding:adapters:${_versions.dataBindingCompilerVersion}",
        ],
        apt         : [
                dagger         : "com.google.dagger:dagger:${_versions.dagger2Version}",
                daggerCompiler : "com.google.dagger:dagger-compiler:${_versions.dagger2Version}",

                daggerAndroid  : "com.google.dagger:dagger-android:${_versions.dagger2Version}",
                daggerProcessor: "com.google.dagger:dagger-android-processor:${_versions.dagger2Version}",
        ],
        architecture: [
                // ViewModel and LiveData
                extensions  : "android.arch.lifecycle:extensions:${_versions.architectureComponentsVersion}",
                // alternatively - just ViewModel
                viewmodel   : "android.arch.lifecycle:viewmodel:${_versions.architectureComponentsVersion}",
                // alternatively - just LiveData
                // livedata "android.arch.lifecycle:livedata:$lifecycle_version"
                livedataCore: "android.arch.lifecycle:livedata-core:${_versions.architectureComponentsVersion}",
                // alternatively - Lifecycles only (no ViewModel or LiveData).
                // Support library depends on this lightweight import
                runtime     : "android.arch.lifecycle:runtime:${_versions.architectureComponentsVersion}",
//                coreRuntime : "android.arch.core:runtime:${_versions.architectureComponentsVersion}",
//        annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_version" // use kapt for Kotlin
        ],
        bbdd        : [
                room        : "android.arch.persistence.room:runtime:${_versions.architectureComponentsVersion}",
                roomCompiler: "android.arch.persistence.room:compiler:${_versions.architectureComponentsVersion}",
                // optional - RxJava support for Room
                roomRx      : "android.arch.persistence.room:rxjava2:${_versions.architectureComponentsVersion}",
                // optional - Guava support for Room, including Optional and ListenableFuture
                // roomGuava: "android.arch.persistence.room:guava:${_versions.architectureComponentsVersion}",
        ],
        net         : [
                retrofit         : "com.squareup.retrofit2:retrofit:${_versions.retrofitVersion}",
                okhttpinterceptor: "com.squareup.okhttp3:logging-interceptor:${_versions.okhttpinterceptor}",
        ],
        lang        : [
                rxAndroid: "io.reactivex.rxjava2:rxandroid:${_versions.rxAndroid}",
                rxJava   : "io.reactivex.rxjava2:rxjava:${_versions.rxJava}",
                rxKotlin : "io.reactivex.rxjava2:rxkotlin:${_versions.rxJava}",
        ],
        utils       : [
                stetho: "com.facebook.stetho:stetho:${_versions.stetho}",
                leakcanary:"com.squareup.leakcanary:leakcanary-android:${_versions.leakcanary}",
        ],
]

def _publicVersions = [

        kotlinVersion    : _versions.kotlinVersion,

        androidCompileSdk: 28,
        androidBuildTools: '26.0.2',

        androidMinSdk    : 21,
        targetSdkVersion : 28,

        applicationId    : 'com.android.es.roversanz.series',

]

ext {
    targetSdkVersion = 25
    localLibraries = _libraries
    localVersions = _publicVersions
}
